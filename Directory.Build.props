<Project>
  <PropertyGroup>
    <MsBuildAllProjects>$(MsBuildAllProjects);$(MsBuildThisFileFullPath)</MsBuildAllProjects>
  </PropertyGroup>

  <PropertyGroup>
    <Version>0.0.19</Version>
    <Authors>Stef Heyenrath</Authors>
    <LangVersion>9</LangVersion>
    <Description>Use the AnyOf&lt;TFirst, TSecond, ...&gt; type to handle multiple defined types as input parameters for methods.</Description>
    <PackageTags>AnyOf;types</PackageTags>

    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageReleaseNotes>$([System.IO.File]::ReadAllText("$(MSBuildProjectDirectory)/../../PackageReleaseNotes.txt"))</PackageReleaseNotes>
    <PackageProjectUrl>https://github.com/StefH/AnyOf</PackageProjectUrl>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/StefH/AnyOf</RepositoryUrl>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
  </PropertyGroup>

  <Choose>
    <!-- The environment variable `Prerelease` is set in the azure-pipelines.yml file. -->
    <When Condition=" '$(Prerelease)' != '' ">
      <PropertyGroup>
        <!-- Set the version to x.x.x.x-{Prerelease}-1{Build_BuildId} (this is same buildId as defined in the azure-pipelines.yml file). -->
        <VersionSuffix>$(Prerelease)-1$(BUILD_BUILDID)</VersionSuffix>
      </PropertyGroup>
    </When>
  </Choose>
</Project>